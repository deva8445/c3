{"ast":null,"code":"var _jsxFileName = \"E:\\\\Devashish\\\\React\\\\c3\\\\src\\\\contexts\\\\AuthContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isAuth, setIsAuth] = useState(\"\");\n\n  const handleAuth = state => {\n    setIsAuth(state);\n  };\n\n  console.log('isAuth:', isAuth);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuth,\n      handleAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"EC3bN5ugnEkpPWcu8sjv5rzhE18=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["E:/Devashish/React/c3/src/contexts/AuthContext.jsx"],"names":["createContext","useState","AuthContext","AuthContextProvider","children","isAuth","setIsAuth","handleAuth","state","console","log"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;AAEP,OAAO,MAAMG,mBAAmB,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAEhD,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBL,QAAQ,CAAC,EAAD,CAAnC;;AAEA,QAAMM,UAAU,GAAIC,KAAD,IAAU;AACzBF,IAAAA,SAAS,CAACE,KAAD,CAAT;AACH,GAFD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,MAAvB;AACA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAI;AAAEA,MAAAA,MAAF;AAAUE,MAAAA;AAAV,KAA/B;AAAA,cAAwDH;AAAxD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAZM;;GAAMD,mB;;KAAAA,mB","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) =>{\r\n\r\n    const [isAuth,setIsAuth] = useState(\"\");\r\n    \r\n    const handleAuth = (state) =>{\r\n        setIsAuth(state);\r\n    }\r\n    \r\n    console.log('isAuth:', isAuth)\r\n    return (\r\n        <AuthContext.Provider value = {{ isAuth, handleAuth }}>{children}</AuthContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}